@model  RAHSys.Apresentacao.Models.FichaClienteAdicionar
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    @Styles.Render("~/FileInput/css");
}

@using (Html.BeginForm("AdicionarFichaCliente", "Contrato", FormMethod.Post, new { @class = "form-horizontal margin-bottom-40", enctype = "multipart/form-data", @id = "formFichaCliente" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Cliente.IdAnaliseInvestimento)
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="portlet light ">
                <div class="portlet-title">
                    <div class="caption caption-md">
                        <i class="icon-bar-chart font-dark hide"></i>
                        <span class="caption-subject font-green-steel uppercase bold">@ViewBag.SubSubTitle</span>
                    </div>
                </div>
                <div class="portlet-body">
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Cliente.IdAnaliseInvestimento, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Cliente.IdAnaliseInvestimento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Código", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Contrato.NomeEmpresa, new { @class = "col-md-2 control-label" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Contrato.NomeEmpresa, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do Cliente", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"></div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Contrato.AnaliseInvestimento.NomeCliente, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Contrato.AnaliseInvestimento.NomeCliente, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do Cliente", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"></div>
                        </div>
                        @Html.LabelFor(model => model.Contrato.ContatoInicial, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Contrato.ContatoInicial, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do Cliente", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"></div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        <div class="col-md-2 control-label">
                            <div class="caption caption-md">
                                <i class="icon-bar-chart font-dark hide"></i>
                                <span class="caption-subject font-green-steel uppercase bold">Endereço</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Contrato.ContratoEndereco.Endereco.Logradouro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Contrato.ContratoEndereco.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Contrato.ContratoEndereco.Endereco.Numero, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Contrato.ContratoEndereco.Endereco.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Número", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Contrato.ContratoEndereco.Endereco.Bairro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Contrato.ContratoEndereco.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Contrato.ContratoEndereco.Endereco.CEP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Contrato.ContratoEndereco.Endereco.CEP, new { htmlAttributes = new { @class = "form-control cep", @placeholder = "CEP", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Contrato.ContratoEndereco.Endereco.IdCidade, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Contrato.ContratoEndereco.Endereco.Cidade.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.Label("Estado", new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.EditorFor(m => m.Contrato.ContratoEndereco.Endereco.Cidade.Estado.Descricao, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estado", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        <div class="col-md-2 control-label">
                            <div class="caption caption-md">
                                <i class="icon-bar-chart font-dark hide"></i>
                                <span class="caption-subject font-green-steel uppercase bold"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.MediaKW, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Cliente.MediaKW, new { htmlAttributes = new { @class = "form-control", @placeholder = "Investimento", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cliente.MediaKW, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.ConsumoTotal, new { @class = "col-md-2 control-label col-md-offset-1" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Cliente.ConsumoTotal, new { htmlAttributes = new { @class = "form-control", @placeholder = "Investimento", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cliente.ConsumoTotal, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="portlet light ">
                <div class="portlet-title">
                    <div class="caption caption-md">
                        <i class="icon-bar-chart font-dark hide"></i>
                        <span class="caption-subject font-green-steel uppercase bold">Documentos</span>
                    </div>
                </div>
                <div class="portlet-body">
                    <div class="form-group form-md-line-input">
                        <div class="col-md-9 col-md-offset-1">
                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                <span class="btn green btn-file btn-circle">
                                    <span class="fileinput-new"> Selecionar Contrato Digitalizado </span>
                                    <span class="fileinput-exists"> Alterar </span>
                                    <input type="file" name="...">
                                </span>
                                <span class="fileinput-filename"> </span> &nbsp;
                                <a href="javascript:;" class="close fileinput-exists" data-dismiss="fileinput"> </a>
                            </div>
                        </div>
                    </div>
                    @if (Model?.Contrato?.Documentos?.Count() > 0)
                    {
                        <div class="form-group form-md-line-input">
                            <div class="col-md-2 control-label">
                                <div class="caption caption-md">
                                    <i class="icon-bar-chart font-dark hide"></i>
                                    <span class="caption-subject font-green-steel uppercase bold">Histórico</span>
                                </div>
                            </div>
                        </div>
                        <div class="table-scrollable">
                            <table class="table table-hover table-light">
                                <thead>
                                    <tr>
                                        <th>
                                            #
                                        </th>
                                        <th>
                                            Nome do Arquivo
                                        </th>
                                        <th>
                                            Data Cadastro
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Contrato.Documentos.OrderByDescending(e => e.DataUpload))
                                    {
                                        <tr>
                                            <td>
                                                @item.IdDocumento
                                            </td>
                                            <td>
                                                @item.NomeArquivo
                                            </td>
                                            <td>
                                                @item.DataUpload
                                            </td>
                                            <td class="text-right">
                                                @Html.ActionLink("Visualizar", "VisualizarContrato", "Contrato", new { id = item.IdDocumento }, new { @class = "btn grey-gallery btn-outline btn-circle btn-md", target = "_blank" })
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="portlet light ">
                <div class="portlet-title">
                    <div class="caption caption-md">
                        <i class="icon-bar-chart font-dark hide"></i>
                        <span class="caption-subject font-green-steel uppercase bold">Fiador(a)</span>
                    </div>
                </div>
                <div class="portlet-body fiador-body">
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Cliente.Fiadores[0].Nome, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do(a) Fiador(a)", @required = "required" } })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].IdEstadoCivil, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.Cliente.Fiadores[0].IdEstadoCivil, new SelectList(Model.EstadosCivis, "IdEstadoCivil", "Descricao"), "Selecione", new { @class = "form-control", @placeholder = "Estado civil", @required = "required", @id = "ddlEstadoCivil", @onchange = "exibirConjuge(this.value)" })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].IdEstadoCivil, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].Email, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].Telefone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].Telefone, new { htmlAttributes = new { @class = "form-control telefone", @placeholder = "Telefone" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].Telefone, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        <div class="col-md-2 control-label">
                            <div class="caption caption-md">
                                <i class="icon-bar-chart font-dark hide"></i>
                                <span class="caption-subject font-green-steel uppercase bold">Endereço</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.Logradouro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Logradouro, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.Numero, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Número" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Numero, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.Bairro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.Bairro, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.CEP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.CEP, new { htmlAttributes = new { @class = "form-control cep", @placeholder = "CEP" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.CEP, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.IdCidade, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.IdCidade, new SelectList(Model.CidadesFiador, "IdCidade", "Nome"), new { @class = "form-control", @placeholder = "Cidade", @required = "required", @id = "ddlCidadesFiador" })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[0].FiadorEndereco.Endereco.IdCidade, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.Label("Estado", new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.Cliente.Fiadores[0].FiadorEndereco.Endereco.Cidade.IdEstado, new SelectList(Model.Estados, "IdEstado", "Descricao"), "Selecione", new { @class = "form-control", @placeholder = "Estado", @onchange = "buscarCidades(this.value,\"ddlCidadesFiador\")" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group nao-conjuge">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn blue btn-circle">Salvar</button>
                            @Html.ActionLink("Cancelar", "Index", "Contrato", null, new { @class = "btn yellow-haze btn-outline btn-circle btn-md" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row conjuge">
        <div class="col-md-12 col-sm-12">
            <div class="portlet light ">
                <div class="portlet-title">
                    <div class="caption caption-md">
                        <i class="icon-bar-chart font-dark hide"></i>
                        <span class="caption-subject font-green-steel uppercase bold">Cônjuge</span>
                    </div>
                </div>
                <div class="portlet-body conjuge-body">
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Cliente.Fiadores[1].Nome, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome do(a) Fiador(a)", @required = "required" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].Email, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].Telefone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].Telefone, new { htmlAttributes = new { @class = "form-control telefone", @placeholder = "Telefone" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].Telefone, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        <div class="col-md-2 control-label">
                            <div class="caption caption-md">
                                <i class="icon-bar-chart font-dark hide"></i>
                                <span class="caption-subject font-green-steel uppercase bold">Endereço</span>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn green btn-circle" id="repetir-endereco">REPETIR</button>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.Logradouro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Logradouro" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Logradouro, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.Numero, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Número" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Numero, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.Bairro, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.Bairro, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.CEP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.CEP, new { htmlAttributes = new { @class = "form-control cep", @placeholder = "CEP" } })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.CEP, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.IdCidade, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.IdCidade, new SelectList(Model.CidadesFiadorConjuge, "IdCidade", "Nome"), new { @class = "form-control", @placeholder = "Cidade", @required = "required", @id = "ddlCidadesFiadorConjuge" })
                            @Html.ValidationMessageFor(model => model.Cliente.Fiadores[1].FiadorEndereco.Endereco.IdCidade, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.Label("Estado", new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.Cliente.Fiadores[1].FiadorEndereco.Endereco.Cidade.IdEstado, new SelectList(Model.Estados, "IdEstado", "Descricao"), "Selecione", new { @class = "form-control", @placeholder = "Estado", @onchange = "buscarCidades(this.value,\"ddlCidadesFiadorConjuge\")" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn blue btn-circle">Salvar</button>
                            @Html.ActionLink("Cancelar", "Index", "Contrato", null, new { @class = "btn yellow-haze btn-outline btn-circle btn-md" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<input type="hidden" value="@Url.Action("ObterCidadesPorEstado", "Contrato")" id="consultaCidades" />
<input type="hidden" value="@RAHSys.Entidades.Seeds.EstadoCivilSeed.Casado.IdEstadoCivil" id="idCasado" />
<input type="hidden" value="" id="conjugeBody" />
@section scripts{
    @Scripts.Render("~/FileInput/js")
    @Scripts.Render("~/BuscarCidades/js")
    @Scripts.Render("~/FichaCliente/js")
}

