@model  RAHSys.Apresentacao.Models.AtividadeEquipeAdicionarEditarModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    @Styles.Render("~/Select2/css");
}

<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="portlet light ">
            <div class="portlet-title">
                <div class="caption caption-md">
                    <i class="icon-bar-chart font-dark hide"></i>
                    <span class="caption-subject font-green-steel uppercase bold">Equipe</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="expand"> </a>
                </div>
            </div>
            <div class="portlet-body portlet-collapsed">
                @{Html.RenderPartial("_EquipeInfo", Model.Equipe);}
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="alert alert-danger">
            <strong>Atenção!</strong> Ao editar a atividade, será criado uma outra atividade com os dados e a antiga será terminada com a data atual. Contudo, as recorrências existentes até o dia da edição permanecerão.
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="portlet light ">
            <div class="portlet-title">
                <div class="caption caption-md">
                    <i class="icon-bar-chart font-dark hide"></i>
                    <span class="caption-subject font-green-steel uppercase bold">@ViewBag.SubTitle</span>
                </div>
            </div>
            <div class="portlet-body">
                @using (Html.BeginForm("EditarAtividade", "Equipe", FormMethod.Post, new { @class = "form-horizontal margin-bottom-40" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Atividade.IdEquipe)
                    @Html.HiddenFor(model => model.Atividade.IdAtividade)
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(model => model.Atividade.IdAtividade, "Código", new { @class = "col-md-2 control-label" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Atividade.IdAtividade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Código", @required = "required", @disabled = "disabled" } })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Atividade.IdContrato, new { @class = "col-md-2 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Atividade.IdContrato, new SelectList(Model.Contratos, "IdContrato", "NomeEmpresa"), "Selecione", new { @class = "form-control", @placeholder = "Contrato", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Atividade.IdContrato, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Atividade.IdTipoAtividade, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Atividade.IdTipoAtividade, new SelectList(Model.TipoAtividades, "IdTipoAtividade", "Descricao"), "Selecione", new { @class = "form-control", @placeholder = "Tipo de Atividade", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Atividade.IdTipoAtividade, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Atividade.IdTipoRecorrencia, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.Atividade.IdTipoRecorrencia, new SelectList(Model.TipoRecorrencias, "IdTipoRecorrencia", "Descricao"), "Selecione", new { @class = "form-control", @placeholder = "Tipo de Recorrência", @id = "ddlRecorrencia", @onchange = "exibirConfigAtividadeBody(this.value)" })
                            @Html.ValidationMessageFor(model => model.Atividade.IdTipoRecorrencia, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Atividade.IdUsuario, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Atividade.IdUsuario, new SelectList(Model.Equipe.Usuarios, "IdUsuario", "EmailEUserName"), "Selecione", new { @class = "form-control", @placeholder = "Atribuido Para" })
                            @Html.ValidationMessageFor(model => model.Atividade.IdUsuario, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                        @Html.LabelFor(m => m.Atividade.DataInicial, new { @class = "col-md-2 control-label" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Atividade.DataInicial, new { htmlAttributes = new { @Value = ((DateTime)Model.Atividade.DataInicial).ToString("dd/MM/yyyy"), @class = "form-control dataAtividade", @placeholder = "Começa em", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Atividade.DataInicial, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.LabelFor(m => m.Atividade.Descricao, new { @class = "col-md-2 control-label" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Atividade.Descricao, new { @class = "form-control", @placeholder = "Descrição" })
                            @Html.ValidationMessageFor(model => model.Atividade.Descricao, "", new { @class = "text-danger" })
                            <div class="form-control-focus"> </div>
                        </div>
                    </div>
                    <div class="form-group form-md-line-input">
                        <div class="col-md-2 control-label">
                        </div>
                        <div class="col-md-9">
                            <div class="md-checkbox-inline">
                                <div class="md-checkbox">
                                    @Html.CheckBoxFor(m => m.Atividade.EquipeInteira, new { @class = "md-check", @id = "equipeInteira" })
                                    <label for="equipeInteira">
                                        <span></span>
                                        <span class="check"></span>
                                        <span class="box"></span> Equipe Inteira
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row config-atividade-body">
                        <div class="col-md-12">
                            <div class="form-group form-md-line-input">
                                <div class="col-md-2 control-label">
                                    <div class="caption caption-md">
                                        <i class="icon-bar-chart font-dark hide"></i>
                                        <span class="caption-subject font-green-steel uppercase bold">Configuração</span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                @Html.LabelFor(m => m.Atividade.ConfiguracaoAtividade.Frequencia, new { @class = "col-md-2 control-label" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Atividade.ConfiguracaoAtividade.Frequencia, new { htmlAttributes = new { @class = "form-control", @placeholder = "Frequência" } })
                                    @Html.ValidationMessageFor(model => model.Atividade.ConfiguracaoAtividade.Frequencia, "", new { @class = "text-danger" })
                                    <div class="form-control-focus"> </div>
                                </div>
                                @Html.LabelFor(m => m.Atividade.ConfiguracaoAtividade.DiaMes, new { @class = "col-md-2 control-label selectMes" })
                                <div class="col-md-2 selectMes">
                                    @Html.EditorFor(model => model.Atividade.ConfiguracaoAtividade.DiaMes, new { htmlAttributes = new { @class = "form-control", @placeholder = "Dia do Mês" } })
                                    @Html.ValidationMessageFor(model => model.Atividade.ConfiguracaoAtividade.DiaMes, "", new { @class = "text-danger" })
                                    <div class="form-control-focus"> </div>
                                </div>
                                @Html.LabelFor(m => m.Atividade.ConfiguracaoAtividade.AtividadeDiaSemanas, new { @class = "col-md-2 control-label selectSemana" })
                                <div class="col-md-4">
                                    <select id="multiple" class="form-control select2-multiple selectSemana" multiple name="DiaSemanasSelecionadas[]">
                                        @foreach (var item in Model.DiaSemanas)
                                        {
                                            var selecionado = Model.DiaSemanasSelecionadas?.Count(e => item.IdDiaSemana == e) > 0;
                                            if (selecionado)
                                            {
                                                <option value="@item.IdDiaSemana" selected>@item.Descricao</option>
                                            }
                                            else
                                            {
                                                <option value="@item.IdDiaSemana">@item.Descricao</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                <div class="col-md-2 control-label">
                                </div>
                                <div class="col-md-2">
                                    <div class="md-checkbox-inline">
                                        <div class="md-checkbox">
                                            @Html.CheckBoxFor(m => m.Atividade.ConfiguracaoAtividade.ApenasDiaUtil, new { @class = "md-check", @id = "apenasDiaUtil" })
                                            <label for="apenasDiaUtil">
                                                <span></span>
                                                <span class="check"></span>
                                                <span class="box"></span> Apenas dia útil
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                @Html.LabelFor(m => m.Atividade.ConfiguracaoAtividade.QtdRepeticoes, new { @class = "col-md-2 control-label" })
                                <div class="col-md-1">
                                    @Html.EditorFor(model => model.Atividade.ConfiguracaoAtividade.QtdRepeticoes, new { htmlAttributes = new { @class = "form-control", @placeholder = "Repetições" } })
                                    @Html.ValidationMessageFor(model => model.Atividade.ConfiguracaoAtividade.QtdRepeticoes, "", new { @class = "text-danger" })
                                    <div class="form-control-focus"> </div>
                                </div>
                                @Html.LabelFor(m => m.Atividade.ConfiguracaoAtividade.TerminaEm, new { @class = "col-md-2 control-label" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Atividade.ConfiguracaoAtividade.TerminaEm, new { htmlAttributes = new { @class = "form-control dataAtividade", @placeholder = "Termina em" } })
                                    @Html.ValidationMessageFor(model => model.Atividade.ConfiguracaoAtividade.TerminaEm, "", new { @class = "text-danger" })
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn blue btn-circle">Salvar</button>
                            @Html.ActionLink("Limpar", "AdicionarAtividade", "Equipe", new { id = Model.Atividade.IdEquipe }, new { @class = "btn btn-white btn-outline btn-circle btn-md" })
                            @Html.ActionLink("Cancelar", "Atividades", "Equipe", new { id = Model.Atividade.IdEquipe }, new { @class = "btn yellow-haze btn-outline btn-circle btn-md" })
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<input type="hidden" value="" id="configAtividadeBody" />
<input type="hidden" value="@RAHSys.Entidades.Seeds.TipoRecorrenciaSeed.Mensal.IdTipoRecorrencia" id="idTipoMes" />
<input type="hidden" value="@RAHSys.Entidades.Seeds.TipoRecorrenciaSeed.Semanal.IdTipoRecorrencia" id="idTipoSemana" />
@section scripts{
    @Scripts.Render("~/Select2/js")
    @Scripts.Render("~/Equipe/Atividade/AdicionarEditar/js")
}
